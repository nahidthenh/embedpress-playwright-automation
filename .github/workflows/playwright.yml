name: Playwright Tests

on:
  push:
    branches: [main, master, nahid]
  schedule:
    - cron: '0 2 * * *'  # 8 AM GMT+6

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright browsers
        run: npx playwright install

      - name: Set up environment variables
        run: |
          echo "SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK_URL }}" >> .env
          echo "PERSONAL_ACCESS_TOKEN=${{ secrets.PERSONAL_ACCESS_TOKEN }}" >> .env
          echo "PASSWORD=${{ secrets.PASSWORD }}" >> .env
          echo "USERNAME=${{ secrets.USERNAME }}" >> .env
          mkdir -p playwright/.auth && touch playwright/.auth/user.json
          echo "{}" >> playwright/.auth/user.json

      - name: Run Playwright tests for Chromium
        env:
          SUBSCRIBER_USER: ${{ secrets.SUBSCRIBER_USER }}
          SUBSCRIBER_PASS: ${{ secrets.SUBSCRIBER_PASS }}
        run: npx playwright test --project=chromium --reporter=json > result.json
        continue-on-error: true

      - name: Parse test summary
        id: summary
        run: |
          PASSED=$(jq '[.suites[].specs[].tests[] | select(.results[].status=="passed")] | length' result.json)
          FAILED=$(jq '[.suites[].specs[].tests[] | select(.results[].status=="failed")] | length' result.json)
          SKIPPED=$(jq '[.suites[].specs[].tests[] | select(.results[].status=="skipped")] | length' result.json)
          echo "PASSED=$PASSED" >> $GITHUB_ENV
          echo "FAILED=$FAILED" >> $GITHUB_ENV
          echo "SKIPPED=$SKIPPED" >> $GITHUB_ENV

      - name: Upload Playwright HTML report
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Deploy HTML report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./playwright-report
          keep_files: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'

      - name: Send Telegram Notification
        if: always()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          MESSAGE="üß™ *Playwright Test Summary*\n\n‚úÖ Passed: $PASSED\n‚ùå Failed: $FAILED\n‚è≠Ô∏è Skipped: $SKIPPED\n\nüìÑ [View Report](https://nahidthenh.github.io/embedpress-playwright-automation/)"
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TELEGRAM_CHAT_ID}" \
            -d parse_mode="Markdown" \
            -d text="$MESSAGE"
